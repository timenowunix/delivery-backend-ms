services:
  order-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: order-service
    depends_on:
      - postgres
      - kafka1
    env_file:
      - .env
    ports:
      - "8080:8080"
    networks:
      - order

  postgres:
    image: postgres:14
    container_name: order-service-postgres
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - order

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    env_file:
      - .env
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_CLIENT_PORT}
      ZOOKEEPER_TICK_TIME: ${ZOOKEEPER_TICK_TIME}
    networks:
      - order

  kafka1:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka1
    depends_on:
      - zookeeper
    env_file:
      - .env
    environment:
      KAFKA_BROKER_ID: ${KAFKA_BROKER_ID_1}
      KAFKA_ZOOKEEPER_CONNECT: ${KAFKA_ZOOKEEPER_CONNECT}
      KAFKA_LISTENERS: ${KAFKA_LISTENER_1}
      KAFKA_ADVERTISED_LISTENERS: ${KAFKA_ADVERTISED_LISTENER_1}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: ${KAFKA_REPLICATION}
    ports:
      - "9092:9092"
    networks:
      - order

  kafka2:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka2
    depends_on:
      - zookeeper
    env_file:
      - .env
    environment:
      KAFKA_BROKER_ID: ${KAFKA_BROKER_ID_2}
      KAFKA_ZOOKEEPER_CONNECT: ${KAFKA_ZOOKEEPER_CONNECT}
      KAFKA_LISTENERS: ${KAFKA_LISTENER_2}
      KAFKA_ADVERTISED_LISTENERS: ${KAFKA_ADVERTISED_LISTENER_2}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: ${KAFKA_REPLICATION}
    ports:
      - "9093:9092"
    networks:
      - order

  kafka3:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka3
    depends_on:
      - zookeeper
    env_file:
      - .env
    environment:
      KAFKA_BROKER_ID: ${KAFKA_BROKER_ID_3}
      KAFKA_ZOOKEEPER_CONNECT: ${KAFKA_ZOOKEEPER_CONNECT}
      KAFKA_LISTENERS: ${KAFKA_LISTENER_3}
      KAFKA_ADVERTISED_LISTENERS: ${KAFKA_ADVERTISED_LISTENER_3}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: ${KAFKA_REPLICATION}
    ports:
      - "9094:9092"
    networks:
      - order
      
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8081:8080"
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    environment:
      - KAFKA_CLUSTERS_0_NAME=local-kafka
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka1:9092,kafka2:9092,kafka3:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    networks:
      - order


volumes:
  postgres_data:

networks:
  order:
